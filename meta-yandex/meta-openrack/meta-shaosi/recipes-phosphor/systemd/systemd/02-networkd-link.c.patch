diff --git a/src/network/networkd-link.c b/src/network/networkd-link.c
index 692c0bf..a27f934 100644
--- a/src/network/networkd-link.c
+++ b/src/network/networkd-link.c
@@ -1283,7 +1283,7 @@ static int link_acquire_ipv6_conf(Link *link) {
         return 0;
 }
 
-static int link_acquire_conf(Link *link) {
+static int link_acquire_ipv4_conf(Link *link) {
         int r;
 
         assert(link);
@@ -1311,6 +1311,24 @@ static int link_acquire_conf(Link *link) {
                         return log_link_warning_errno(link, r, "Could not acquire DHCPv4 lease: %m");
         }
 
+    return 0;
+}
+
+static int link_acquire_conf(Link *link) {
+    int r;
+
+    assert(link);
+
+    r = link_acquire_ipv4_conf(link);
+    if (r < 0)
+        return r;
+
+    if (in_addr_is_null(AF_INET6, (const union in_addr_union*) &link->ipv6ll_address) == 0) {
+        r = link_acquire_ipv6_conf(link);
+        if (r < 0)
+            return r;
+    }
+
         if (link_lldp_enabled(link)) {
                 assert(link->lldp);
 
@@ -2127,12 +2145,6 @@ static int link_configure(Link *link) {
                 r = link_acquire_conf(link);
                 if (r < 0)
                         return r;
-
-                if (in_addr_is_null(AF_INET6, (const union in_addr_union*) &link->ipv6ll_address) == 0) {
-                        r = link_acquire_ipv6_conf(link);
-                        if (r < 0)
-                                return r;
-                }
         }
 
         return link_enter_join_netdev(link);
@@ -2515,6 +2527,10 @@ static int link_carrier_gained(Link *link) {
                         link_enter_failed(link);
                         return r;
                 }
+
+        r = link_enter_set_addresses(link);
+        if (r < 0)
+            return r;
         }
 
         r = link_handle_bound_by_list(link);
